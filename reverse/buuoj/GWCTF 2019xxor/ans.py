a2=[2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0]

# a1[2] - a1[3] != 2225223423LL
# a1[3] + a1[4] != 4201428739LL
# a1[2] - a1[4] != 1121399208LL

# x - y = 2225223423
# y + z = 4201428739
# x - z = 1121399208

a11=[-1]*6
a11[0]=-548868226
a11[5]=-2064448480
a11[1]=550153460
a11[2]=3774025685
a11[3]=1548802262
a11[4]=2652626477


# __int64 __fastcall sub_400686(unsigned int *a1, _DWORD *a2)
# {
#   __int64 result; // rax
#   unsigned int v3; // [rsp+1Ch] [rbp-24h]
#   unsigned int v4; // [rsp+20h] [rbp-20h]
#   int v5; // [rsp+24h] [rbp-1Ch]
#   unsigned int i; // [rsp+28h] [rbp-18h]

#   v3 = *a1;
#   v4 = a1[1];
#   v5 = 0;
#   for ( i = 0; i <= 0x3F; ++i )
#   {
#     v5 += 1166789954;
#     v3 += (v4 + v5 + 11) ^ ((v4 << 6) + *a2) ^ ((v4 >> 9) + a2[1]) ^ 0x20;
#     v4 += (v3 + v5 + 20) ^ ((v3 << 6) + a2[2]) ^ ((v3 >> 9) + a2[3]) ^ 0x10;
#   }
#   *a1 = v3;
#   result = v4;
#   a1[1] = v4;
#   return result;
# }

def sub_400686(a10,a11, a2):
    v5= (1166789954 * (0x3f+1))%((1<<32)-1)
    v4=a11
    v3=a10
    for i in range(0x3f+1):
        v4-=()