print(0x7a)
print(chr(0x7a))

table=[0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x30, 0x31, 0x32,0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x2B, 0x2F]

message=[0x7A, 0x4D, 0x58, 0x48, 0x7A, 0x33, 0x54, 0x49, 0x67, 0x6E, 0x78, 0x4C, 0x78, 0x4A, 0x68, 0x46, 0x41, 0x64, 0x74, 0x5A, 0x6E, 0x32, 0x66, 0x46, 0x6B, 0x33, 0x6C, 0x59, 0x43, 0x72, 0x74, 0x50, 0x43,0x32, 0x6C, 0x39]

print(message)
print(len(message))

print(table)
print(len(table))

M="".join(chr(item) for item in message)

T="".join(chr(item) for item in table)
print(T)

def changeTable():
    result=6
    while(result<15):
        v1=table[result+10]
        table[result+10]=table[result]
        table[result]=v1
        result+=1
    return result

changeTable()

T="".join(chr(item) for item in table)
print(T)
    
# signed int sub_401000()
# {
#   signed int result; // eax
#   char v1; // cl

#   result = 6;
#   do
#   {
#     v1 = base64table[result + 10];
#     base64table[result + 10] = base64table[result];
#     base64table[result++] = v1;
#   }
#   while ( result < 15 );
#   return result;
# }

nm=""

for item in M:
    if ord(item)>=ord("A") and ord(item)<=ord("Z"):
        nm+=chr(ord(item)+ord("a")-ord("A"))
    elif ord(item)>=ord("a") and ord(item)<=ord("z"):
        nm+=chr(ord(item)+ord("A")-ord("a"))
    else:
        nm+=item

print(nm)

import base64

string1 = T
string2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

print(base64.b64decode(nm.translate(str.maketrans(string1,string2))))